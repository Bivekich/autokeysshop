---
import Layout from '../layouts/Layout.astro';
import TovarList from '../components/TovarList.astro';
import UslugiList from '../components/UslugiList.astro';
import AboutUsBigBlock from '../components/AboutUsBigBlock.astro';
import AboutUsSmallBlock from '../components/AboutUsSmallBlock.astro';
import { getTovars, getUslugi, getOtzivi } from '../sanityclient'
import Slider from '../components/Slider.astro';

// Вызов родительской функции
const tovars = await getTovars();
const uslugi = await getUslugi();
const otzivi = await getOtzivi();
---
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tiny-slider/2.9.4/tiny-slider.css">
		<!--[if (lt IE 9)]><script src="https://cdnjs.cloudflare.com/ajax/libs/tiny-slider/2.9.4/min/tiny-slider.helper.ie8.js"></script><![endif]-->
<Layout title="Auto Keys Shop - Главная">
	<main>
		<h1 class="maintitle">
			Экспертный сервис для вашего авто
		</h1>
		<span class="startSpan">
			Изготовление ключей, прошивка евро2 STAGE-1 и ремонт замков <br> по лучшим ценам!
		</span>
		<div class="mainimage-block">
			<img src="mainimage.png" class="mainimage">
			<div class="info-block">
				<div class="info">
					<h3>Почему выбирают нас?</h3>
					<p>Мы гордимся нашей командой опытных специалистов, которые знают все тонкости работы с автомобилями.</p>
				</div>
				<img src="mercedes-benz-logo.svg" alt="" class="info-img">
				<img src="bmw-logo.svg" alt="" class="info-img">
			</div>
		</div>

		<div class="aboutus" id="aboutus">
			<div class="aboutus-block">
				<h5>О Нас</h5>
				<p>
					Добро пожаловать в нашу компанию! Мы — команда высококвалифицированных специалистов
				</p>
			</div>
			<div class="aboutus-info-blocks">
				<AboutUsBigBlock
					image_src="aboutus1.png"
					title="Наша цель"
					body="Наша основная цель — обеспечить ваших автомобилистов надежным и качественным обслуживанием в любом экстренном или плановом случае."
				/>
				<AboutUsSmallBlock
					image_src="aboutus2.png"
					title="Гарантия"
					body="Мы предоставляем гарантии на все наши услуги, чтобы вы могли быть уверены в их качестве и надежности."
				/>
				<AboutUsSmallBlock
					image_src="aboutus3.png"
					title="Доступность"
					body="Наша компания предлагает услуги в удобное для вас время, включая вечерние и выходные часы."
				/>
			</div>
		</div>

		<div class="callback" id="callback">
			<Slider slides={otzivi}/>
		</div>

		<div class="uslugi" id="uslugi">
			<h2>Профессиональные услуги по вскрытию авто, изготовлению ключей, прошивке евро2 STAGE-1 и ремонту замков</h2>
			<div class="uslugi-block">
				<UslugiList uslugi={uslugi} />
			</div>
		</div>
		<div class="tovari">
			<h2>Авто товары и ключи</h2>
			<div class="uslugi-block">
				<TovarList tovars={tovars} />
			</div>
		</div>
	</main>

		<div class="callbackform">
			<h5>Свяжитесь с нами</h5>
			<h4>Мы делаем свою работу на высшем уровне</h4>
			<form id="dataForm">
				<label>
					<span>ФИО</span>
					<input type="text" name="fio" placeholder="ФИО">
				</label>
				<label>
					<span>Номер телефона</span>
					<input type="text" name="number" placeholder="Номер телефона">
				</label>
				<label>
					<span>Комментарий</span>
					<textarea name="comment" id="comment" placeholder="Комментарий"></textarea>
				</label>
				<button type="submit">Связаться с нами</button>
			</form>
		</div>
</Layout>
<script type="module">
	import {tns} from "../../node_modules/tiny-slider/src/tiny-slider"

	var slider = tns({
		container: '.my-slider',
		items: 1,
		slideBy: 'page',
		autoplay: false,
		controls: false,
		center: true,
		navPosition: "bottom",
		navAsThumbnails: true
	});
</script>
<script>
	document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('dataForm');

        form.addEventListener('submit', async function(event) {
          event.preventDefault();

          const formData = new FormData(form); // Убедитесь, что передается правильный элемент формы
          const data = {};

          formData.forEach((value, key) => {
            data[key] = value;
          });

          // Здесь вы можете делать что-то с данными, например:
          console.log('Form Data:', data);

          const fio = data['fio']
          const number = data['number']
          const comment = data['comment']
		  const chat_id = "-1002217904188"
		  const message = `Новая заявка:\n\n    Фио: ${fio}\n\n    Номер телефона: ${number}\n\n    Комментарий: ${comment}`;
		  const encodedMessage = encodeURIComponent(message);
		  const token =  "6583247383:AAFYgvUj0VawkJnKiod-ctskeSk9FthDmsE"
		  const url = `https://api.telegram.org/bot${token}/sendMessage?chat_id=${chat_id
		  }&text=${encodedMessage}`;
		  fetch(url)
		  window.location.href = "/"
          // Пример: отправка данных на сторонний API
          // const response = await fetch('https://example.com/api', {
          //   method: 'POST',
          //   headers: {
          //     'Content-Type': 'application/json',
          //   },
          //   body: JSON.stringify(data),
          // });
          // const result = await response.json();
          // console.log('API Response:', result);
        });
      });
</script>
<style>
	.callbackform{
		background-color: #387EFF;
		width: 100%;
		padding:50px;
		margin-top: 50px;
		display: flex;
		flex-direction: column;
		gap: 30px;
	}
	.callbackform h5 {
		font-weight: 600;
		font-size: 42px;
		color: #c3d8ff;
		width: fit-content;
		margin: auto;
	}
	.callbackform h4 {
		font-weight: 600;
		font-size: 42px;
		text-align: center;
		color: #fff;
		width: fit-content;
		margin: auto;
	}
	.callbackform form {
		display: flex;
		flex-direction: column;
		gap: 20px;
		padding: 30px;
		background-color: white;
		box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.25);
		border-radius: 10px;
		max-width: 500px;
		width: 100%;
		margin: auto
	}
	.callbackform label{
		display: flex;
		flex-direction: column;
	}
	.callbackform input,
	.callbackform textarea{
		border: 1px solid #b9b7b7;
		border-radius: 10px;
		font-size: 20px;
		padding: 20px
	}
	.callbackform textarea{
		height: 150px;
	}
	.callbackform button{
		background: #377dff;
		border-radius: 12px;
		font-weight: 600;
		font-size: 22px;
		padding: 15px 10px;
		border: 0;
		color: #fff;
	}
	main {
		margin: auto;
		padding: 1rem;
		max-width: 1200px;
		width: 100%;
		color: black;
		font-size: 20px;
		line-height: 1.6;
	}
	.callback{
		margin: 100px 50px;
		padding: 100px 0;
		border: 1px solid #000;
		border-left: 0;
		border-right: 0;
	}
	.tovari{
		margin-top: 150px;
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		gap: 50px;
	}
	.uslugi-block{
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		gap: 30px;
	}
	.uslugi{
		margin-top: 100px;
	}
	.uslugi h2{
		font-weight: 600;
		font-size: 30px;
		line-height: 1.2;
		color: #000;
		max-width: 600px;
		width: 100%;
	}
	.aboutus-info-blocks{
		display: flex;
		flex-direction: row;
		gap: 30px;
		margin-top: 50px;
		flex-wrap: wrap;
	}
	.aboutus-block{
		max-width: 500px;
		width: 100%;
	}
	.aboutus-block *{
		margin: 0;
	}
	.aboutus-block p{
		margin-top: 10px;
	}
	.mainimage{
		width: 100%;
		margin-top: 60px;
	}
	.mainimage-block{
		display: flex;
		flex-direction: column;
	}
	.info-block{
		display: flex;
		flex-direction: row;
		align-items: end;
		justify-content: start;
		transform: translateY(
			-75%
		);
	}
	.info-img{
		margin: 15px;
	}
	.info {
		border-radius: 10px;
		max-width: 400px;
		min-height: 216px;
		width: 100%;
		height: fit-content;
		background: #377dff;
		padding: 30px;
		
	}
	.info h3{
		font-family: var(--font-family);
		font-weight: 600;
		font-size: 28px;
		color: #97bcff;
	}
	.info p{
		font-family: var(--font-family);
		font-weight: 600;
		font-size: 24px;
		color: #fff;
	}
	.maintitle{
		max-width: 600px;
		width: 100%;
		font-weight: 600;
		font-size: 52px;
		color: #000;
		text-align: start;
		margin: 0;
		margin-bottom: 20px;
	}
	.startSpan{
		font-family: var(--font-family);
		font-weight: 600;
		font-size: 22px;
		color: #6777a7;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
	.tns-nav{
		width: fit-content;
		margin: auto;
	}

	
	@media (max-width: 600px){
		.info-block{
			transform: translateY(-10%);
			align-items: start;
		}
		.info-block img {
			display: none;
		}
		.info{
			max-width: 100%;
		}
	}
</style>
